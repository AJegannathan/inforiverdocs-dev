(self.webpackChunkinforiver=self.webpackChunkinforiver||[]).push([[6728],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return d},kt:function(){return c}});var n=r(7294);function l(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function u(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?u(Object(r),!0).forEach((function(t){l(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):u(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,l=function(e,t){if(null==e)return{};var r,n,l={},u=Object.keys(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||(l[r]=e[r]);return l}(e,t);if(Object.getOwnPropertySymbols){var u=Object.getOwnPropertySymbols(e);for(n=0;n<u.length;n++)r=u[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}var o=n.createContext({}),i=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},d=function(e){var t=i(e.components);return n.createElement(o.Provider,{value:t},e.children)},k={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,l=e.mdxType,u=e.originalType,o=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),f=i(r),c=l,m=f["".concat(o,".").concat(c)]||f[c]||k[c]||u;return r?n.createElement(m,a(a({ref:t},d),{},{components:r})):n.createElement(m,a({ref:t},d))}));function c(e,t){var r=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var u=r.length,a=new Array(u);a[0]=f;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:l,a[1]=s;for(var i=2;i<u;i++)a[i]=r[i];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},3919:function(e,t,r){"use strict";function n(e){return!0===/^(\w*:|\/\/)/.test(e)}function l(e){return void 0!==e&&!n(e)}r.d(t,{b:function(){return n},Z:function(){return l}})},4996:function(e,t,r){"use strict";r.d(t,{C:function(){return u},Z:function(){return a}});var n=r(2263),l=r(3919);function u(){var e=(0,n.default)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,r=void 0===t?"/":t,u=e.url;return{withBaseUrl:function(e,t){return function(e,t,r,n){var u=void 0===n?{}:n,a=u.forcePrependBaseUrl,s=void 0!==a&&a,o=u.absolute,i=void 0!==o&&o;if(!r)return r;if(r.startsWith("#"))return r;if((0,l.b)(r))return r;if(s)return t+r;var d=r.startsWith(t)?r:t+r.replace(/^\//,"");return i?e+d:d}(u,r,e,t)}}}function a(e,t){return void 0===t&&(t={}),(0,u().withBaseUrl)(e,t)}},625:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return s},metadata:function(){return o},toc:function(){return i},default:function(){return k}});var n=r(2122),l=r(9756),u=(r(7294),r(3905)),a=r(4996),s={id:"formula-list",title:"Function Reference",slug:"/"},o={unversionedId:"references/formula-list",id:"references/formula-list",isDocsHomePage:!1,title:"Function Reference",description:"ValQ supports many traditional user-friendly functions that allow you",source:"@site/docs/references/formula-list.mdx",sourceDirName:"references",slug:"/",permalink:"/inforiverdocs/",version:"current",frontMatter:{id:"formula-list",title:"Function Reference",slug:"/"},sidebar:"functionSideBar",next:{title:"IF",permalink:"/inforiverdocs/references/formulas/if"}},i=[{value:"Logical Functions",id:"logical-functions",children:[]},{value:"Logical Operators",id:"logical-operators",children:[]},{value:"Math Functions",id:"math-functions",children:[]},{value:"Finance Functions",id:"finance-functions",children:[]},{value:"Range Functions",id:"range-functions",children:[]},{value:"Static Identifiers And Other Formats",id:"static-identifiers-and-other-formats",children:[]},{value:"Other Operators",id:"other-operators",children:[]}],d={toc:i};function k(e){var t=e.components,r=(0,l.Z)(e,["components"]);return(0,u.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,u.kt)("p",null,"ValQ supports many traditional user-friendly functions that allow you\nto create complex models. You may recognize many of these from your\nexperience with Microsoft Excel."),(0,u.kt)("h2",{id:"logical-functions"},"Logical Functions"),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,(0,u.kt)("strong",null,"NAME")),(0,u.kt)("th",null,(0,u.kt)("strong",null,"SYNTAX")),(0,u.kt)("th",null,(0,u.kt)("strong",null,"DESCRIPTION")))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/if")},"IF")),(0,u.kt)("td",null,"If( logical_test, value_if_true, value_if_false )"),(0,u.kt)("td",null,"Checks whether a condition is met, and returns one value if TRUE, and another value if FALSE")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/switch")},"SWITCH")),(0,u.kt)("td",null,"SWITCH ( expression, value1, result1, value2, result2, ... value_n, result_n [, default] )"),(0,u.kt)("td",null,"Evaluates an expression against a list of values and returns the result corresponding to the first matching value. If there is no match, an optional default value is returned.")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/and")},"AND")),(0,u.kt)("td",null,"AND( logical_test1, [logical_test2], ... )"),(0,u.kt)("td",null,"Checks whether all the arguments are TRUE, and returns TRUE if all arguments are TRUE")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/or")},"OR")),(0,u.kt)("td",null,"OR( logical_test1, [logical_test2], ... )"),(0,u.kt)("td",null,"Checks whether any of the arguments are TRUE, and returns TRUE or FALSE. Returns FALSE only if all arguments are FALSE")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/not")},"NOT")),(0,u.kt)("td",null,"NOT( logical_test )"),(0,u.kt)("td",null,"Changes FALSE to TRUE, or TRUE to FALSE")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/xor")},"XOR")),(0,u.kt)("td",null,"XOR( logical_test1, [logical_test2], ... )"),(0,u.kt)("td",null,"Returns a logical 'Exclusive Or' of all arguments")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/isnan")},"ISNAN")),(0,u.kt)("td",null,"ISNAN (value1,value2)"),(0,u.kt)("td",null," Returns a default value if the value in the node is an error.")))),(0,u.kt)("h2",{id:"logical-operators"},"Logical Operators"),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,(0,u.kt)("strong",null,"OPERATORS")),(0,u.kt)("th",null,(0,u.kt)("strong",null,"DESCRIPTION")))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,"&&"),(0,u.kt)("td",null,"Logical ",(0,u.kt)("a",{href:(0,a.Z)("references/formulas/and")},"AND"))),(0,u.kt)("tr",null,(0,u.kt)("td",null,"||"),(0,u.kt)("td",null,"Logical ",(0,u.kt)("a",{href:(0,a.Z)("references/formulas/or")},"OR"))))),(0,u.kt)("h2",{id:"math-functions"},"Math Functions"),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,(0,u.kt)("strong",null,"NAME")),(0,u.kt)("th",null,(0,u.kt)("strong",null,"SYNTAX")),(0,u.kt)("th",null,(0,u.kt)("strong",null,"DESCRIPTION")))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/sum")},"SUM")),(0,u.kt)("td",null,"Sum(value1,[value2]....)"),(0,u.kt)("td",null,"Add all numbers in the arguments, which can be numbers or node references")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/average")},"AVERAGE")),(0,u.kt)("td",null,"Average(value1,[value2]....)"),(0,u.kt)("td",null,"Returns the average (arithmetic mean) of its arguments, which can be numbers or node references")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/averageexzero")},"AVERAGEEXZERO")),(0,u.kt)("td",null,"AverageExZero(value1,[value2]....)"),(0,u.kt)("td",null,"Returns the average (arithmetic mean) of its arguments excluding zeros, which can be numbers or node references")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/averageexneg")},"AVERAGEEXNEG")),(0,u.kt)("td",null,"AverageExNeg(value1,[value2]....)"),(0,u.kt)("td",null,"Returns the average (arithmetic mean) of its arguments excluding negatives, which can be numbers or node references")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/averageexzeroneg")},"AVERAGEEXZERONEG")),(0,u.kt)("td",null,"AverageExZeroNeg(value1,[value2]....)"),(0,u.kt)("td",null,"Returns the average (arithmetic mean) of its arguments excluding zeros and negatives, which can be numbers or node references")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/count")},"COUNT")),(0,u.kt)("td",null,"Count(value1,[value2]....)"),(0,u.kt)("td",null,"Counts the number of items in a range")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/abs")},"ABS")),(0,u.kt)("td",null,"ABS(value)"),(0,u.kt)("td",null,"Returns the absolute value of a number, a number without its sign")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/min")},"MIN")),(0,u.kt)("td",null,"Min(value1,[value2]....)"),(0,u.kt)("td",null,"Returns the smallest number in a set of values. Node references also accepted as arguments")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/max")},"MAX")),(0,u.kt)("td",null,"Max(value1,[value2]....)"),(0,u.kt)("td",null,"Returns the largest number in a set of values. Node references also accepted as arguments")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/power")},"POWER")),(0,u.kt)("td",null,"POW(value,power)"),(0,u.kt)("td",null,"Returns the result of a number raised to a power")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/sqrt")},"SQRT")),(0,u.kt)("td",null,"SQRT(value)"),(0,u.kt)("td",null,"Returns the square root of a number")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/exp")},"EXP")),(0,u.kt)("td",null,"EXP(value)"),(0,u.kt)("td",null,"Returns e raised to the power of a given number")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/log")},"LOG")),(0,u.kt)("td",null,"LOG(value,base)"),(0,u.kt)("td",null,"Returns the logarithm of a number to the base you specify")))),(0,u.kt)("h2",{id:"finance-functions"},"Finance Functions"),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,(0,u.kt)("strong",null,"NAME")),(0,u.kt)("th",null,(0,u.kt)("strong",null,"SYNTAX")),(0,u.kt)("th",null,(0,u.kt)("strong",null,"DESCRIPTION")))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/irr")},"IRR")),(0,u.kt)("td",null,"IRR (Values, [Guess])"),(0,u.kt)("td",null,"Returns the internal rate of return for a series of cash flows. Node references also accepted as arguments")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/npv")},"NPV")),(0,u.kt)("td",null,"NPV (Rate, value1, [value2], ...)"),(0,u.kt)("td",null,"Returns the net present value of an investment based on a discount rate and a series of future payments (negative values) and income (positive values)")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/pmt")},"PMT")),(0,u.kt)("td",null,"PMT(Rate, Nper, PV, [FV], [Type])"),(0,u.kt)("td",null,"Calculates the payment for a loan based on constant payments and a constant interest rate")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/ipmt")},"IPMT")),(0,u.kt)("td",null,"IPMT (Rate, Per, Nper, PV, [FV], [Type])"),(0,u.kt)("td",null,"Returns the interest payment for a given period for an investment,based on periodic, constant payments and a constant interest rate")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/fv")},"FV")),(0,u.kt)("td",null,"FV (Rate, Nper, [Pmt], PV, [Type])"),(0,u.kt)("td",null,"Returns the future value of an investment based on periodic, constant payments and a constant interest rate")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/pv")},"PV")),(0,u.kt)("td",null,"PV(Rate, Nper, [Pmt], FV, [Type])"),(0,u.kt)("td",null,"Returns the present value of an investment")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/cumipmt")},"CUMIPMT")),(0,u.kt)("td",null,"CUMIPMT (Rate, Nper, PV, start_period, end_period, Type)"),(0,u.kt)("td",null,"Returns the cumulative interest paid between two periods")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/cumprinc")},"CUMPRINC")),(0,u.kt)("td",null,"CUMPRINC (Rate, Nper, PV, start_period, end_period, Type)"),(0,u.kt)("td",null,"Returns the cumulative principal paid on a loan between two periods")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/rate")},"RATE")),(0,u.kt)("td",null,"RATE(Nper, PMT, PV, [FV], [Type], [Guess])"),(0,u.kt)("td",null,"Returns the interest rate per period of a loan or an investment."))))," ",(0,u.kt)("h2",{id:"range-functions"},"Range Functions"),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,(0,u.kt)("strong",null,"NAME")),(0,u.kt)("th",null,(0,u.kt)("strong",null,"SYNTAX")),(0,u.kt)("th",null,(0,u.kt)("strong",null,"DESCRIPTION")))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/range")},"Range")),(0,u.kt)("td",null,".Range(start_index,end_index)"),(0,u.kt)("td",null)),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/lastnperiods")},"LastNPeriods")),(0,u.kt)("td",null,".LastNPeriods(n)"),(0,u.kt)("td",null)),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/get")},"Get")),(0,u.kt)("td",null,".Get(period_index)"),(0,u.kt)("td",null)),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/foreach")},"ForEach")),(0,u.kt)("td",null,"ForEach(Array,Iterator)"),(0,u.kt)("td",null,"Iterator function")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/findbyid")},"findByID")),(0,u.kt)("td",null,'findByID("ID match string")'),(0,u.kt)("td",null,"Tagging/Grouping function")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/findbytitle")},"findByTitle")),(0,u.kt)("td",null,'findByTitle("Title match string")'),(0,u.kt)("td",null,"Tagging/Grouping function")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/getcurrentrange")},"GETCURRENTRANGE")),(0,u.kt)("td",null,"DS.(SERIES).GETCURRENTRANGE()"),(0,u.kt)("td",null,"Current range based on period selection")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/getrowvalue")},"GETROWVALUE")),(0,u.kt)("td",null,"DS.(SERIES).GETROWVALUE(source_key)"),(0,u.kt)("td",null,"Value of source key row")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/thisid")},"THIS_ID")),(0,u.kt)("td",null,"DS.(SERIES).THIS_ID"),(0,u.kt)("td",null)),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/thissourcekey")},"THIS_SOURCE_KEY")),(0,u.kt)("td",null,"DS.(SERIES).THIS_SOURCE_KEY"),(0,u.kt)("td",null,"Returns the value of the row with node id as source key")))),(0,u.kt)("h2",{id:"static-identifiers-and-other-formats"},"Static Identifiers And Other Formats"),(0,u.kt)("table",null,(0,u.kt)("thead",null,(0,u.kt)("tr",null,(0,u.kt)("th",null,(0,u.kt)("strong",null,"CONSTANTS")),(0,u.kt)("th",null,(0,u.kt)("strong",null,"EXPLANATION")))),(0,u.kt)("tbody",null,(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/this")},"THIS")),(0,u.kt)("td",null,"Current Node")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/me")},"ME")),(0,u.kt)("td",null,"Current Node")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/current_series")},"CURRENT_SERIES")),(0,u.kt)("td",null,"Current series label")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/current_series_id")},"CURRENT_SERIES_ID"," ")),(0,u.kt)("td",null,"Current series id")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/current_period_index")},"CURRENT_PERIOD_INDEX")),(0,u.kt)("td",null,"Current period index")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/current_node_value")},"CURRENT_NODE_VALUE"," ")),(0,u.kt)("td",null,"Current node previous period values")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/sim_from_to_index")},"SIM_FROM_INDEX")),(0,u.kt)("td",null,"Sim From period index")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/sim_from_to_index")},"SIM_TO_INDEX")),(0,u.kt)("td",null,"Sim To period index")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].PARENT")),(0,u.kt)("td",null,"Parent Node")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].CHILDREN")),(0,u.kt)("td",null,"Node children")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].act")),(0,u.kt)("td",null,"Simulated Series of the node")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].tgt"," ")),(0,u.kt)("td",null,"Comparison Series of the node")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].base"," ")),(0,u.kt)("td",null,"Baseline Series of the node")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].ALL_PERIODS")),(0,u.kt)("td",null,"Returns all Period values")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].SIM_PERIODS")),(0,u.kt)("td",null,"Returns simulation period values")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].act.ALL_PERIODS")),(0,u.kt)("td",null,"Returns all period values of Simulated Series,")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].tgt.ALL_PERIODS"," ")),(0,u.kt)("td",null,"Returns all period values of Comparison Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].base.ALL_PERIODS")),(0,u.kt)("td",null,"Returns all period values of Baseline Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].act.SIM_PERIODS"," ")),(0,u.kt)("td",null,"Returns simulation period values of Simulated Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].tgt.SIM_PERIODS"," ")),(0,u.kt)("td",null,"Returns simulation period values of Comparison Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].base.SIM_PERIODS")),(0,u.kt)("td",null,"Returns simulation period values of Baseline Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].Range(start_index,end_index)")),(0,u.kt)("td",null,"Returns selected range values")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].act.Range(start_index,end_index)")),(0,u.kt)("td",null,"Returns selected range values of Simulated Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].base.Range(start_index,end_index)")),(0,u.kt)("td",null,"Returns selected range values of Baseline Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].tgt.Range(start_index,end_index)")),(0,u.kt)("td",null,"Returns selected range values of Comparison Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].Get(period_index)"," ")),(0,u.kt)("td",null,"Returns selected period value")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].act.Get(period_index)")),(0,u.kt)("td",null,"Returns selected period value of Simulated Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].base.Get(period_index)"," ")),(0,u.kt)("td",null,"Returns selected period value of Baseline Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].tgt.Get(period_index)")),(0,u.kt)("td",null,"Returns selected period value of Comparison Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].LastNPeriods(n)"," ")),(0,u.kt)("td",null,"Returns selected range values")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].act.LastNPeriods(n)"," ")),(0,u.kt)("td",null,"Returns selected range values of Simulated Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].base.LastNPeriods(n)"," ")),(0,u.kt)("td",null,"Returns selected range values of Baseline Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].tgt.LastNPeriods(n)"," ")),(0,u.kt)("td",null,"Returns selected range values of Comparison Series")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].TOTAL"," ")),(0,u.kt)("td",null,"Returns the all period aggregated value of node")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].PTD"," ")),(0,u.kt)("td",null,"Returns the period to date aggregated value of node")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].SEL"," ")),(0,u.kt)("td",null,"Returns the simulation periods aggregated value of node")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].ID"," ")),(0,u.kt)("td",null,"Returns node id")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].VISIBLE_CHILDREN"," ")),(0,u.kt)("td",null,"Returns all visible children of a node")),(0,u.kt)("tr",null,(0,u.kt)("td",null,(0,u.kt)("a",{href:(0,a.Z)("references/formulas/node-properties")},"[NODE].HIDDEN_CHILDREN"," ")),(0,u.kt)("td",null,"Returns all hidden children of a node")))),(0,u.kt)("h2",{id:"other-operators"},"Other Operators"),(0,u.kt)("div",{style:{textAlign:"justify"},className:"table"},(0,u.kt)("table",null,(0,u.kt)("thead",{parentName:"table"},(0,u.kt)("tr",{parentName:"thead"},(0,u.kt)("th",{parentName:"tr",align:null},"OPERATORS"),(0,u.kt)("th",{parentName:"tr",align:null},"DESCRIPTION"))),(0,u.kt)("tbody",{parentName:"table"},(0,u.kt)("tr",{parentName:"tbody"},(0,u.kt)("td",{parentName:"tr",align:null},"()"),(0,u.kt)("td",{parentName:"tr",align:null},"Parenthesis")),(0,u.kt)("tr",{parentName:"tbody"},(0,u.kt)("td",{parentName:"tr",align:null},"+, -"),(0,u.kt)("td",{parentName:"tr",align:null},"plus,minus(-1) sign")),(0,u.kt)("tr",{parentName:"tbody"},(0,u.kt)("td",{parentName:"tr",align:null},"*",", /"),(0,u.kt)("td",{parentName:"tr",align:null},"Multiplication, Division")),(0,u.kt)("tr",{parentName:"tbody"},(0,u.kt)("td",{parentName:"tr",align:null},"+, -"),(0,u.kt)("td",{parentName:"tr",align:null},"Addition, Subtraction")),(0,u.kt)("tr",{parentName:"tbody"},(0,u.kt)("td",{parentName:"tr",align:null},"==, !="),(0,u.kt)("td",{parentName:"tr",align:null},"Equal to, Not equal to")),(0,u.kt)("tr",{parentName:"tbody"},(0,u.kt)("td",{parentName:"tr",align:null},">, >="),(0,u.kt)("td",{parentName:"tr",align:null},"Greater than, Greater than or equal to")),(0,u.kt)("tr",{parentName:"tbody"},(0,u.kt)("td",{parentName:"tr",align:null},"<, <="),(0,u.kt)("td",{parentName:"tr",align:null},"Less than, Less than or equal to"))))))}k.isMDXComponent=!0}}]);